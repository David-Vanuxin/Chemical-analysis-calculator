{"version":3,"sources":["reportWebVitals.js","redux/changeElementsListReducer.js","redux/changeMassReducer.js","redux/changeAppType.js","redux/rootReducer.js","redux/store.js","components/Home.js","components/InputSubstance.js","components/CombustionProducts.js","components/QuantitativeValues.js","calck/calckWithValues.js","calck/calckResult.js","calck/addOxigeniumMass.js","calck/findMolecularFormula.js","components/Result.js","components/MatterMass.js","components/AppType.js","components/Matters.js","components/PercentsValues.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","elements","name","value","mass","type","rootReducer","combineReducers","elementsList","state","arguments","length","undefined","action","push","_step","_iterator","_createForOfIteratorHelper","s","n","done","elem","index","indexOf","splice","err","f","_step2","_iterator2","matter","store","createStore","Home","navigate","useNavigate","dispatch","useDispatch","react_default","a","createElement","className","onClick","InputSubstance","props","_useState","useState","_useState2","Object","slicedToArray","setState","InputSubstance_createForOfIteratorHelper","useSelector","checked","onChange","id","CombustionProducts","Fragment","QuantitativeValues","console","log","map","key","QuantitativeValues_InputNumber","InputNumber","unit","event","target","valueAsNumber","calckElemMass","massMatter","molecularMassMatter","massElement","calckResult","data","calckWithValues_createForOfIteratorHelper","product","_step3","_iterator3","_step4","_iterator4","_step5","_iterator5","warn","calckWithValues","matterMass","result","assign","OxigeniumMass","forEach","element","addOxigeniumMass","formula","indices","Error","concat","rootElem","count","findMolecularFormula","getStringFormula","match","JSON","stringify","Result","useMemo","Back","resultRef","useRef","useEffect","current","innerHTML","ref","MatterMass","skipURL","appType","url","AppType","Matters","PercentsValues","App","react_router_dom","react_router","path","caseSensitive","Home_Home","MatterMass_MatterMass","CombustionProducts_CombustionProducts","QuantitativeValues_QuantitativeValues","Result_Result","AppType_AppType","Matters_Matters","PercentsValues_PercentsValues","ReactDOM","createRoot","document","getElementById","render","StrictMode","es"],"mappings":"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","file":"static/js/main.01c3e92b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  elements: [\n    {name:\"CO2\", value:null},\n    {name:\"H2O\", value:null},\n  ]\n}\n\nexport const changeElementsListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"addElement\":\n      state.elements.push({\n        name: action.name,\n        value:null\n      })\n      return state\n\n    case \"removeElement\":\n      for (let elem of state.elements) {\n        if (elem.name === action.name) {\n          let index = state.elements.indexOf(elem)\n          state.elements.splice(index, index + 1)\n        }\n      }\n      return state\n\n    case \"changeMass\":\n      for (let elem of state.elements) {\n        if (elem.name === action.name) {\n          elem.value = action.value\n        }\n      }\n      return state\n\n    case \"restart\": \n      return {\n        elements: [\n          {name:\"CO2\", value:null},\n          {name:\"H2O\", value:null},\n        ]\n      }\n\n    default: return state\n  }\n}","const initialState = {\n  mass:null\n}\n\nexport const changeMatterMassReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case \"changeMatterMass\":\n        state.mass = action.mass\n      return state\n\n    case \"deleteMatterMass\":\n    case \"restart\": return {mass:null}\n\n    default: return state\n  }\n}","const initialState = {\n  type:\"values\"\n}\n\nexport const changeAppType = (state = initialState, action) => {\n  switch(action.type) {\n    case \"changeAppType\":\n        state.type = action.value\n      return state\n\n    case \"restart\": return {type:\"values\"}\n\n    default: return state\n  }\n}","import {combineReducers} from \"redux\"\n\nimport {changeElementsListReducer} from \"./changeElementsListReducer\"\nimport {changeMatterMassReducer} from \"./changeMassReducer\"\nimport {changeAppType} from \"./changeAppType\"\n\n\nexport const rootReducer = combineReducers({\n    elementsList: changeElementsListReducer,\n    matter: changeMatterMassReducer,\n    type: changeAppType\n  }) ","import {createStore} from \"redux\"\nimport {rootReducer} from \"./rootReducer\"\n\nexport const store = createStore(rootReducer)","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\n\nexport const Home = () => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch()\n\n  return(\n    <div className=\"main\">\n      <div className=\"header-wrapper\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>\n        По количественным характеристикам продуктов сгорания органического вещества определяет его молекулярную формулу\n      </h2>\n      </div>\n      <div className=\"button-wrapper\">\n      <button onClick={() => {navigate(`/app-type`); dispatch({type:\"restart\"})} }>Старт</button>\n      </div>\n    </div>)\n}","import React, {useState} from \"react\"\nimport {useDispatch, useSelector} from 'react-redux'\n\nexport default function InputSubstance(props) {\n\n  const [state, setState] = useState(false)\n  const dispatch = useDispatch()\n\n  let data = useSelector(state => state.elementsList.elements)\n\n  for (let elem of data) {\n    if (elem.name === props.name && !state) {\n      setState(true)\n    }\n  }\n\n  return (\n    <label>\n      <input type=\"checkbox\" checked={state} onChange={() => changeElement(props.name)}></input>\n      <span id={props.name}>{props.name}</span>\n    </label>\n  )\n\n\n\n  function changeElement(name) {\n    if (state) {\n      setState(false)\n      dispatch({ type:\"removeElement\", name: props.name})\n    } else {\n      setState(true)\n      dispatch({ type:\"addElement\", name: props.name})\n    }\n  }\n}","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport InputSubstance from \"./InputSubstance\"\n\nexport const CombustionProducts = () => {\n  let navigate = useNavigate();\n  return(\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Выберите продукты сгорания искомого органического вещества</h2>\n      <>\n      <ul>\n        <li><InputSubstance name=\"N2\"/></li>\n        <li><InputSubstance name=\"HCl\"/></li>\n        <li><InputSubstance name=\"HBr\"/></li>\n        <li><InputSubstance name=\"Na2CO3\"/></li>\n        <li><InputSubstance name=\"K2CO3\"/></li>\n      </ul>\n      </>\n      <div className=\"button-wrapper\">\n        <button onClick={() => navigate(\"/matter-mass\")}>Назад</button>\n        <button onClick={() => navigate(\"/quantitative-values\")}>Далее</button>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nexport const QuantitativeValues = () => {\n  let navigate = useNavigate();\n\n  let elements = useSelector((state) => state.elementsList.elements)\n  console.log(elements)\n\n  return(\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Введите количественные значения для продуктов сгорания</h2>\n      <ul>\n      {\n        elements.map((elem, index) => {\n          return (<li key={index}><InputNumber name={elem.name}/></li>)\n        })\n      }\n      </ul>\n      <div className=\"button-wrapper\">\n        <button onClick={() => navigate(\"/combustion-products\")}>Назад</button>\n        <button onClick={() => navigate(\"/result\")}>Результат</button>\n      </div>\n    </div>)\n}\n\nconst InputNumber = (props) => {\n  let unit = \"г\"\n  if (props.name === \"CO2\" || props.name === \"HCl\" || props.name === \"N2\") unit = \"л\"\n\n  const dispatch = useDispatch()\n\n  function changeValue(name, value) {\n    dispatch({ type:\"changeMass\", name: props.name, value: value })\n  }\n\n  return (\n    <label>\n      <span id={props.name}>{props.name}</span>\n      <input onChange={(event) => changeValue(props.name, event.target.valueAsNumber)} type=\"number\"></input>\n      {unit}\n    </label>\n  )\n}","// Вещество по элементам\nexport const calckWithValues = (data) => {\n  let matter = []// [{'c':12}, {'h':23}, ]]\n\n  for (let product of data) {\n    if (product.value === null) {\n      return `Нажмите кнопку 'Назад' и заполните все поля`\n    }\n\n    let massElement, mass\n    switch(product.name) {\n      case 'CO2':\n        // Вычисление массы углерода\n        mass = (product.value / 22.4) * 44 // граммы\n        massElement = calckElemMass(mass, 44, 12)       \n        matter.push({\n          name:'C',\n          mass: massElement\n        })\n        break\n\n      case 'H2O':\n        // Вычисление массы водорода (в HCl есть массы и хлора и водорода)\n        massElement = calckElemMass(product.value, 18, 2) // H2O - 2 водорода, поэтому 1 * 2 = 2      \n        matter.push({\n          name:'H',\n          mass: massElement\n        })\n        break\n\n      case 'N2':\n        // Вычисление массы азота\n        mass = (product.value / 22.4) * 28 // граммы\n        massElement = calckElemMass(mass, 28, 28)      \n        matter.push({\n          name:'N',\n          mass: massElement\n        })\n        break\n\n      case 'HCl':// тоже в литрах\n        // Вычисление массы хлора\n        mass = (product.value / 22.4) * 36.5 // граммы\n        massElement = calckElemMass(mass, 36.5, 35.5)      \n        matter.push({\n          name:'Cl',\n          mass: massElement\n        })\n\n        // Вычисление массы водорода и добавление в её массив\n        massElement = calckElemMass(mass, 36.5, 1)     \n\n        for (let elem of matter) {\n          if (elem.name !== 'H') continue\n\n          elem.mass += massElement\n        }\n\n        break\n\n      case 'HBr':\n        // Вычисление массы брома\n        massElement = calckElemMass(product.value, 81, 80)      \n        matter.push({\n          name:'Br',\n          mass: massElement\n        })\n\n        // Вычисление массы водорода и добавление в её массив\n        massElement = calckElemMass(product.value, 81, 1)     \n\n        for (let elem of matter) {\n          if (elem.name !== 'H') continue\n\n          elem.mass += massElement\n        }\n        break\n\n      case 'Na2CO3':\n        // Вычисление массы натрия \n        massElement = calckElemMass(product.value, 106, 46)     \n        matter.push({\n          name:'Na',\n          mass: massElement\n        })\n\n        // Вычисление массы углерода и добавление в её массив\n        massElement = calckElemMass(product.value, 106, 12)     \n\n        for (let elem of matter) {\n          if (elem.name !== 'C') continue\n\n          elem.mass += massElement\n        }\n        break\n\n      case 'K2CO3':\n        // Вычисление массы калия \n        massElement = calckElemMass(product.value, 138, 78)   \n        matter.push({\n          name:'K',\n          mass: massElement\n        })\n\n        // Вычисление массы углерода и добавление в её массив\n        massElement = calckElemMass(product.value, 138, 12)     \n\n        for (let elem of matter) {\n          if (elem.name !== 'C') continue\n\n          elem.mass += massElement\n        }\n        break\n\n      default:\n        console.warn('Продукт не добавлен: ', product.name)\n    }\n  }\n  return matter\n}\n\n// molecularMassMatter - молекулярная масса вещества\n// massElement - относительная атомная масса элемента, умноженная на коэфициент после него (для водорода в H2O: 1 * 2 = 2)\n// massMatter - масса вещества\n\nconst calckElemMass = (massMatter, molecularMassMatter, massElement) => {\n  return (massElement * massMatter) / molecularMassMatter\n}","import {calckWithValues} from './calckWithValues'\nimport {addOxigeniumMass} from './addOxigeniumMass'\nimport {findMolecularFormula} from './findMolecularFormula'\n\nexport const calckResult = (state) => {\n  if (state.type.type === 'values') {\n    let elements = calckWithValues(state.elementsList.elements)\n    // Найти кислород по массе\n    if (state.matter.mass !== null) {\n      elements = addOxigeniumMass(state.matter.mass, elements)\n    }\n    // Найти молекулярную формулу\n    const formula = findMolecularFormula(elements)\n    // Вынести это как метод toString()\n\n    const getStringFormula = (formula, n=1) => {\n      let result = ''\n      formula.forEach(element => {\n        let count = element.count * n\n        if (count === 1) {\n          result += `${element.name}`\n        } else {\n          result += `${element.name}<sub>${count}</sub>`\n        }\n      })\n\n      if (result.match(/\\./)) return;\n\n      return result\n    }\n\n    for (let n = 1; n < 10; n++) {\n      let matter = getStringFormula(formula, n)\n\n      if (matter === undefined) continue\n\n      return matter\n    }\n  }\n\n  if (state.type.type === 'percents') {\n    return JSON.stringify( state.elementsList.elements )\n  }\n}","export const addOxigeniumMass = (matterMass, elements) => {\n\tconst result = []\n\tObject.assign(result, elements)\n\n\tlet OxigeniumMass = matterMass\n\telements.forEach(element => {\n\t\tOxigeniumMass -= element.mass\n\t})\n\n\tresult.push({\n\t\tname: 'O',\n\t\tmass: OxigeniumMass\n\t})\n\n\treturn result\n}","export const findMolecularFormula = elements => {\n  const indices = []\n  elements.forEach((element, index) => { \n    switch (element.name) {\n      // Нужно переписать в классы\n      case 'C':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 12\n        })\n        break\n      case 'H':\n        indices.push(element)\n        break\n      case 'Cl':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 35.5\n        })\n        break\n      case 'N':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 14\n        })\n        break\n      case 'O':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 16\n        })\n        break\n      case 'Na':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 23\n        })\n        break\n      case 'K':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 39\n        })\n        break\n      case 'Br':\n        indices.push({\n          name: element.name,\n          mass: element.mass / 80\n        })\n        break\n      default: throw new Error(`Not such element: ${element.name}`)\n    }\n  })\n\n  const formula = []\n  const rootElem = {name:\"root\", mass:1}// Элемент, на количество вещества которого делим все остальные элементы\n\n  indices.forEach((element, index) => {\n    if (index === 0) {\n      formula.push({name: element.name, count: 1})\n      rootElem.mass = element.mass\n      return\n    }\n\n    formula.push({name: element.name, count: element.mass / rootElem.mass})\n  })\n\n  return formula\n}","import React, { useMemo, useRef, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { calckResult } from '../calck/calckResult'\nimport {useDispatch, useSelector} from 'react-redux'\n\nexport const Result = () => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch()\n\n  let state = useSelector(state => state)\n\n  const result = useMemo(() => calckResult(state), [state])\n\n  let Back = \"Определите тип задачи\"\n\n  if (state.type.type === \"percents\") {\n    Back = (<button onClick={() => navigate(\"/percents-values\")}>Назад</button>)\n  }\n\n  if (state.type.type === \"values\") {\n    Back = (<button onClick={() => navigate(\"/quantitative-values\")}>Назад</button>)\n  }\n\n  const resultRef = useRef()\n\n  useEffect(() => {\n    resultRef.current.innerHTML = result\n  })\n\n  return(\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Результат</h2>\n      <p ref={resultRef}></p>\n      <div className=\"button-wrapper\">\n        { Back }\n        <button onClick={() => {navigate(\"/app-type\"); dispatch({type:\"restart\"})}}>Ещё раз</button>\n      </div>\n    </div>)\n}","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\n\nexport const MatterMass = () =>  {\n  const dispatch = useDispatch()\n  let navigate = useNavigate();\n\n  function changeValue(value) {\n    dispatch({ type:\"changeMatterMass\", mass: value })\n  }\n\n  const skip = (url) => {\n    dispatch({ type:\"deleteMatterMass\" })\n    navigate(url)\n  }\n\n  let appType = useSelector(state => state.type.type)\n\n  let skipURL\n\n  if (appType === 'values') {\n    skipURL = `/combustion-products`\n  }\n\n  if (appType === 'percents') {\n    skipURL = `/matters`\n  }\n\n  // Значение массы тоже должно оставаться в поле ввода при переходе по кнопке \"Назад\" со следующей страницы\n  return (\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Введите массу сгоревшего органического вещества</h2>\n      <div>\n        <label>\n          <input onChange={(event) => changeValue(event.target.valueAsNumber)} type=\"number\"></input>\n          г\n        </label>\n      </div>\n      <div className=\"button-wrapper\">\n        <button onClick={() => navigate(\"/app-type\")}>Назад</button>\n        <button onClick={() => navigate(skipURL)}>Далее</button>\n        <button onClick={() => skip(skipURL)}>Пропустить</button>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useDispatch } from \"react-redux\"\n\nexport const AppType = () =>  {\n  let navigate = useNavigate();\n\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Выберите тип задачи: </h2>\n      <div className=\"select-card-wrapper\">\n        <div className=\"select-card\" onClick={() => {dispatch({type:\"changeAppType\", value:\"percents\"}); navigate(`/matter-mass`)}}>\n          <h3>Проценты</h3>\n          <hr />\n          <p>Определение молекулярной формулы по массовым долям элементов</p>\n        </div>\n        <div className=\"select-card\" onClick={() => {dispatch({type:\"changeAppType\", value:\"values\"}); navigate(`/matter-mass`)}}>\n          <h3>Значения</h3>\n          <hr />\n          <p>Определение молекулярной формулы по продуктам сгорания</p>\n        </div>\n      </div>\n      <div className=\"button-wrapper\">\n        <button onClick={() => navigate(\"/\")}>Назад</button>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport InputSubstance from \"./InputSubstance\"\n\nexport const Matters = () =>  {\n  let navigate = useNavigate();\n\n  return (\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Выберите элементы, входящие в состав искомого вещества (кроме углерода и водорода)</h2>\n      \n        <ul>\n          <li><InputSubstance name=\"O\"/></li>\n          <li><InputSubstance name=\"N\"/></li>\n          <li><InputSubstance name=\"Cl\"/></li>\n          <li><InputSubstance name=\"Br\"/></li>\n        </ul>\n      \n      <div className=\"button-wrapper\">\n        <button onClick={() => navigate(\"/matter-mass\")}>Назад</button>\n        <button onClick={() => navigate(\"/percents-values\")}>Далее</button>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nexport const PercentsValues = () =>  {\n  let navigate = useNavigate();\n  let elements = useSelector((state) => state.elementsList.elements)\n\n  const dispatch = useDispatch() \n\n  const changePercent = (name, value) =>  {\n    dispatch({\n      type:\"changeMass\",// не нужно добавить отдельный редьюсер для этого события - он уже есть\n      // только в калькуляторе нужно брать значения как проценты, если type === \"percent\" \n      name,\n      value\n    })\n  }\n\n  return (\n    <div className=\"main\">\n      <h1>Калькулятор для химического анализа органических веществ</h1>\n      <h2>Введите значения процентного содержания каждого вещества</h2>\n      <>\n        <ul>\n        {\n          elements.map((elem, index) => {\n            if (elem.name === \"CO2\") elem.name = \"C\"\n            if (elem.name === \"H2O\") elem.name = \"H\"\n            return (\n              <li key={index}>\n                <label>{elem.name}<input type=\"number\" onChange={(event) => changePercent(elem.name, event.target.valueAsNumber)}></input>%</label>\n              </li>\n            )\n          })\n        }\n        </ul>\n      </>\n      <div className=\"button-wrapper\">\n        <button onClick={() => navigate(\"/matters\")}>Назад</button>\n        <button onClick={() => navigate(\"/result\")}>Результат</button>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nimport * as Components from \"./components\"\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Routes>\n          <Route path=\"/\" caseSensitive={false} element={<Components.Home />} />\n          <Route path=\"/matter-mass\" caseSensitive={false} element={<Components.MatterMass />} />\n          <Route path=\"/combustion-products\" caseSensitive={false} element={<Components.CombustionProducts />} />\n          <Route path=\"/quantitative-values\" caseSensitive={false} element={<Components.QuantitativeValues />} />\n          <Route path=\"/result\" caseSensitive={false} element={<Components.Result />} />\n          <Route path=\"/app-type\" caseSensitive={false} element={<Components.AppType />} />\n          <Route path=\"/matters\" caseSensitive={false} element={<Components.Matters />} />\n          <Route path=\"/percents-values\" caseSensitive={false} element={<Components.PercentsValues />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\n\n// Не реализованные фичи:\n// использовать хуки useEffect() и useRef() в <App />, чтобы заключить цифру в тег <sub> (1)\n// Переход к следующему элементу <input> по нажатию enter (2)\n\n// (1)\n/*let times = 0\ndocument.getElementById(\"root\").addEventListener(\"DOMSubtreeModified\", event => {\n  console.log(`DOMtree changed ${++times} times`)\n  // Лучше искать по тегу <span>\n  const pre_labs = document.getElementsByTagName(\"label\")\n\n  if (pre_labs.length == 0) return\n\n  const labels = []\n\n  for(let i = 0; i <= (pre_labs.length / 2) + 1; ++i) labels.push(pre_labs[i])\n\n  for (let n = 0; n < labels.length; ++n) {\n\n    if (typeof labels[n] === \"undefined\") continue\n\n    let span = labels[n].getElementsByTagName(\"span\")[0]\n\n    if (span.innerHTML.match(/<sub>/) != null) continue\n\n    if (span.innerHTML.match(/\\d+/) == null) continue\n\n    let result = []\n    for (let char of span.innerText) {\n      if ( !isNaN( Number(char) ) ) {\n        result.push(`<sub>${char}</sub>`)\n      } else {\n        result.push(char)\n      }\n    }\n\n    result = result.join(\"\")\n    console.log(result)\n    span.innerHTML = result\n  }\n})*/\n\n// (2)\n/*document.getElementById(\"root\").addEventListener(\"DOMSubtreeModified\", event => {\n  let elems = document.getElementsByTagName(\"input\")\n\n  for (let n = 0; n < elems.length; ++n) {\n    elems[n].addEventListener(\"keypress\", (event) => {\n      if (event.keyCode == 13) {\n        elems[n].blur()\n        if (elems[n + 1] !== \"undefined\") {\n          elems[n + 1].focus()\n          console.log(\"asd\")\n        }\n      }\n    })\n  }\n})*/","import './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/store\" \n\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}